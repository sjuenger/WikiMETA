Wikidata Timeout on SPARQL queries
1. try                 # to counter the TIMEOUT of Wikidata
                #sleep(2)

2. try: With try except and a goto

SQID Website: 9515
(07.01.2022 -> based on Property data refresh	1/7/2022, 3:12:09 PM)
Wikidata: 9520
(07.01.2022)

No "stated IN" in SQID
No "retrieved"
Missing:
In References:
stated in	P248	Item
retrieved	P813	Point in time	date or point in time that information was retrieved from a database or website (for use in online sources)		-
reference URL	P854	URL

(neu)
author name string	P2093	String

in Qualifier List wurde >50 nicht gefunden auf SQID

----> Idee: Es gibt die properties in der Liste nicht, die besonders of in statements oder als reference genutzt werden:)
Qualifiers:
instance of	P31	Item
select (COUNT (?s) AS ?value)
where {?s pq:P31 ?o}
-----> 119662 (07.01.2022 15:38)
series ordinal	P1545	String
	
Total	157,478,555	
Main statement	147,366	<0.1% of uses
Qualifier	157,330,228	>99.9% of uses
Reference	961	<0.1% of uses
von https://www.wikidata.org/wiki/Property_talk:P1545#Documentation

YES :) Das war es. Jetzt nur noch herausfinden, welche Values die haben.

---> SQID
--> Hinzufügen: Alle von SQID vom 07.01.22 23:00
+ stated IN, Retrieved, Reference URL, instance of, series ordinal !
hinzufügen von https://www.wikidata.org/wiki/Property_talk:P1545#Documentation --> den Property Talks 
SQID:Dump date	12/27/2021
Property data refresh	1/7/2022, 10:12:09 PM
Class data refresh	Invalid Date

Removed: publication in which this taxon name was established (P5326) !
0

0

0
, becuase not used and no Datatype was attached

Wikidata Property Talks von 23:05 07.01.2022


Missing Properties:
-- References:
stated in	P248	Item
Main statement	777	<0.1% of uses
Qualifier	661	<0.1% of uses
Reference	81,416,222	>99.9% of uses
-
retrieved	P813	Point in time // In SQID Notation: Time
Main statement	39	<0.1% of uses
Qualifier	60,647	<0.1% of uses
Reference	79,466,992	>99.9% of uses
-
reference URL	P854	URL
Main statement	1,635	<0.1% of uses
Qualifier	5,840	<0.1% of uses
Reference	60,638,820	>99.9% of uses
-
-- Qualifiers
instance of	P31	Item
Main statement	101,938,489	99.9% of uses
Qualifier	119,662	0.1% of uses
Reference	272	<0.1% of uses
-
series ordinal	P1545	String
Main statement	147,385	<0.1% of uses
Qualifier	157,340,618	>99.9% of uses
Reference	961	<0.1% of uses






Ergebnis des texttoDict
PID:  P368
Label:  Sandbox-CommonsMediaFile
Datatype:  CommonsMedia
Facets found:  ['work', 'version, edition, or translation', 'Wikimedia Commons']
Total amount of references found:  41
Total amount of qualifiers found:  300
Total amount of properties:  9360

beim zweiten mal: 

PID:  P8245
Label:  Mediaqueer.ca movie ID
Datatype:  ExternalId
Facets found:  ['causality', 'intellectual work', 'organization', 'authority control', 'work', 'version, edition, or translation', 'unique identifier', 'organization identifier', 'film industry', 'film', 'work of fiction', 'art', 'art collection', 'personal life', 'LGBT', 'human', 'business']
Total amount of references found:  38
Total amount of qualifiers found:  241
Total amount of properties:  9360
Problem!


--------------
for Wikidata data
https://wikidata-todo.toolforge.org/stats.php


--------------------------------
--> not every Wikidata Property has a facet !!! -> extract the usage of them seperately?
---> the qualifier identifier does not show up on the facets
---> how much properties (of each one) do not have a facet?
---> how much percentage of the used qualifiers do not have a facet?

-------------------------------------
Neue Daten von SQID, da "author name string" gefehlt hat.

Datum von SQID: 21.01.2022 15:15
Anzahl Properties von SQID: 9542
SQID Daten:
Dump date	1/3/2022
Property data refresh	1/21/2022, 2:12:09 PM
Class data refresh	Invalid Date

 Statistics based on Wikidata dump 1/3/2022
	Items	Properties	Total
Number	95890783	9516	95900299
Statements	1353436157	190052	1353626209
Labels	671932201	200972	672133173
Descriptions	2612816854	92753	2612909607
Aliases	167484260	145886	167630146
Site links	80941456	0	80941456


Hinzugefügt zu SQID: 
Datum der hinzugefügten Properties von Wikidata:

Wikidata Property Talks von 21.02.2022 15:20-15:26


Missing Properties:
-- References:
stated in	P248	Item // In SQID Notation: Wikibase:Item
Total	81,611,877	
Main statement	779	<0.1% of uses
Qualifier	664	<0.1% of uses
Reference	81,610,434	>99.9% of uses
-
retrieved	P813	Point in time // In SQID Notation: Time
Total	79,704,137	
Main statement	39	<0.1% of uses
Qualifier	61,015	<0.1% of uses
Reference	79,643,083	>99.9% of uses
-
reference URL	P854	URL
Total	60,683,536	
Main statement	1,628	<0.1% of uses
Qualifier	5,838	<0.1% of uses
Reference	60,676,070	>99.9% of uses
-
author name string P2093 String
Main statement	134,749,493	>99.9% of uses
Qualifier	87,072	<0.1% of uses
Reference	14,678	<0.1% of uses
-
-- Qualifiers
instance of	P31	Item
Total	102,175,597	
Main statement	102,055,897	99.9% of uses
Qualifier	119,424	0.1% of uses
Reference	276	<0.1% of uses
-
series ordinal	P1545	String
Total	157,579,335	
Main statement	147,617	<0.1% of uses
Qualifier	157,430,755	>99.9% of uses
Reference	963	<0.1% of uses
-



Datum von Wikidata: 21.01.2022 15:20
Anzahl Properties von Wikidata: 9.547

# Anzahl Citing Sources: 47
# Anzahl qualifiers: 

Suggestion: Die P10272 ist (noch)nicht enthalten.

--------------
Nochmal die Sache mit den prop ref values angucken. Wird das nicht doppelt gezählt?
Wird generell was doppelt gezählt.

------

Macht
"http://www.wikidata.org/prop/qualifier/P"
oder
"http://www.wikidata.org/prop/qualifier/"
einen Unterschied?

Macht
"http://www.wikidata.org/prop/reference/P"
oder
"http://www.wikidata.org/prop/reference/"
einen Unterschied?


------------------------------
Gib z.B. die ranks mit best / normal / deprecated ranks mit x/100 an :)
--> mit den properties, senarios und so vll auch 
und dann eine grafik mit queries per timeframe, damit man die gewichtung weiß

-----------------------------------

<http://www.wikidata.org/prop/qualifier/>
oder
<http://www.wikidata.org/prop/qualifier/value/>

--> egal?
---> wird evtl als STR(....) verwendet !
auch bei den References in Betracht ziehen.

ween nur nach qualifier/ oder reference gesucht wird, dann kann das passieren:

-->   ?var1  <http://www.wikidata.org/prop/reference/Q63844>  ?var20 . --> scenario 1
aber man entdeckt vll nicht
--> FILTER (  (  STRSTARTS (  STR (  ?var7  ) , STR (  <http://www.wikidata.org/prop/qualifier/>  )  )  && !( STRSTARTS (  STR (  ?var7  ) , STR (  <http://www.wikidata.org/prop/qualifier/value/>  )  ) ) ) 
) .

--> daher, die values bei den properties mit rein und die STR Versionen (leider) unter "Others" -> da sonst nicht klar trennbar zwischen http://www.wikidata.org/prop/qualifier/ oder http://www.wikidata.org/prop/qualifier/Q123 oder http://www.wikidata.org/prop/qualifier/345

--> also, händische Analyse, welche Querie - Arten sich in en OTHERS verstecken, gerne mit Statistik

-------------------------------------------------------------------------

<http://wikiba.se/ontology#qualifier>
--> wird nicht beachtet, da keine Metadata im näheren Sinne
evtl. nur verwendet, um zu bestimmen, ob etwas ein Qualifier ist?

------------------------------------------------------------------------

Die Diagramme eher mit Prozentangaben an Gesamtqueries machen und nur in Textform die absoluten Zahlen.

------------------------------------------------------------------------

fast 50% Quoten an redundant -> man kennt es ja von sich selbst : man führt eine
Query gerne mal 1,2,3,4 ... mal aus.
Gerade, wenn man einen Fehler macht.

Also menschliches Verhalten, was man hier sehen kann.


---------------------------------------------------------------------------

Zu 'Total Occurrences' der Scenarios

{"data_type": "reference_metadata", "total_queries": 1491, "SELECT_queries": 1482, "DESCRIBE_queries": 0, "CONSTRUCT_queries": 9, "ASK_queries": 0, "found_scenarios": {"looking_for": "reference_metadata", "total_occurrences": 3267, "one": 473, "two": 1, "three": 39, "four": 0, "five": 169, "six": 0, "seven": 0, "eight": 0, "nine": 171, "ten": 0, "eleven": 0, "twelve": 0, "filter": 16, "optional": 869, "union": 108, "prop_path": 1246, "group": 102, "bind": 5, "blank_node": 56, "minus": 13, "subselect": 1, "literal": 2, "values": 0, "service": 0, "other": 1}}

Zusammengezählt: 3272
--> beim PropPath evtl. total occurences != total scenarios

-----------------------------------------------------------------------------

Analyse der Queries im 'Other' folder.
Analyse der BIND Scenarios

Philipp:
ALS FUßNOTE
- BEISPIELQUERIES evtl. GRUND für hohe Anzahl an redundant queries
- NACH BESTIMMTEN PATTERN SUCHEN		
	---- AUSSAGE ZU DEN HÄUFIGSTEN REDUNDANZEN?  


-----------------------------------------------------------------------------

Unterschiede zwischen Total Occurencs und total scenarios wegen :

BLANK & PROPPATH
BLANK & LITERAL
... weiter im folder
 Weil -> hauptsächlich durch triple strukturen

-------------------------------------------------------------------------------

Zur Erklärung bei der Redundant Detection: 
Von der Github Page des Wikidata Sparql logs die Wikidata Sparql Queries von (wahrscheinlich 2017)
Es sind 345 Example Queries bei 2 failed queries --> aber diese enthalten weder reference / qualifier noch rank
In 2022-02-20 waren es 355

-------------------------------------------------------------------------------

Die FAILED Queries nicht vergessen. !! Auch bei den Example Queries.


----------------------------------------------------------------------------------

Allgemein höhere Anzahl an wiederkehrenden Queries mit Metadaten (ca. 50%)

Erklärung: Metadtaen werden eher von "Superusern" verwendet. Und diese stellen, beim Debugging, öfters die gleichen Queries häufiger.

... wenn ich daran denken muss, welcher arme Student in 10Jahren die 100te Queries rausfilter kann, die ich zur Facet Generierung immer wieder
und wieder gestellt habe, weil immer mal wieder was nicht geklappt hat.

---------------------------------------------------------------------------------

Nur ca. 1000 verwertbare Rank Queries.
Und davon noch ~ ?? % Example Queries.

-> Eig. zu wenig, um Schlüsse zu ziehen. Auf jeden Fall von den einzelnen Timeframes
--> Eher nur Overall

Fazit: Rank Metadata wird von den Nutzern sehr wenig verwendet


----------------------------------------------------------------------------------

Ergebnis der Example Query Analyse: Kein genügender Grund für die gefundene, erhöhte Anzahl an redundanten Queries.

---------------------------------------------------------------------------------

Die häufige Verwendung des Pattern bei den ONLY REFERENCE NODE Referenzen ist evtl. auf das Ausprobieren von Usern zurückzuführen, die einfach wussten wollten. welche RDF Tripel von diesem Blank Node kommen / gehen. Evtl. weil sie diesen kryptischen Blank Node bei einer Berechnung gefunden haben und nun herausfinden wollen, was er ist.

Note: In Wikidata gibt es keine gut einsehbare Erklärung zu den Blank Nodes, da die URI dieser Blank Nodes nicht mit einer URL von Wikidata belegt ist. Man bekommt also keine Seite angezeigt, wie z.B. bei http://www.wikidata.org/prop/direct/P279
gibt es bei e.g. http://www.wikidata.org/reference/a5b3f257ea0b27ed06c87d361a7496079bfa46e4


------------------------------------------------------------------------------------

50% der Statements in Wikidata haben eine Referenz, aber in den Queries tauchen Hinweise auf ein Interesse an Referenzen nur in xx % (Siehe Verteilung über die Timeframes in Tabelle xx) auf.

In Wikidata hat ein Statement im Mittel x Qualifiers pro Statement.
In den Daten hat jede Query im Mittel x Qualifiers pro Query.

In Wikidata sind x% Statements BestRank, DeprecatedRank, NormalRank
In den Queries wurden x% Best, Normal und Deprecated Rank gefunden

Zusatzinformationen:
- Prozent / Anzahl der Queries mit Anzeichen auf Qualifier Interessse.
- Anzahl an Referenz Hinweisen pro Query



Idee, warum diese Analyse:
Bei References wichtig, das überhaupt eine da ist. Nicht so wichtig, ob eine oder 5 Referenzen pro Statement.
Bei Qualifiern hat die Aussage, wie viele Qualifier ein Statement hat, eine höhere Aussgaekraft, weil mit jedem Qualifier weitere Information zu einem Statement hinzugefügt wird - in einem höheren Maße, als bei einer weiteren Referenz bei einem bereits referenzierten Statement.

--------------------------------------------------------------------------------------


-------> Alle Timeframes sind gleich lang. Genau 4 Wochen.
Allerdings mit einer Lücke Ende 2017 und einer Lücke an Neujahr.

----> Der Prozentsatz an Organic Queries an den Robotic Queries schwankt zuweilen sehr stark von 0.3 bi 1%. Da ich nicht klar trennen kann, ob dieser Anstieg bei so geringen Prozentzahlen an den gesamt Queries daran liegt, dass auch 3x mal mehr sog. ORGANCI Queries gestellt wurden - oder es sich hier um eine Unregelmäßigkeit des Algorithmus der Ersteller handelt, der einige Robotic Queries nicht erkannt hat, was eine durchaus wahrscheinlich Schwankung der Genauigkeit der Erkennung des Algorithmus im Bereich von einigen Zehntel-Prozent ausmachen würde.

---------> Daher werde ich die gefundenen Metadata Queries über die Timeframes nicht in absoluten Zahlen zueinander, sondern nur in Prozentangaben im Bezug auf alle als organic markierten Queries des >Timeframes markieren. 
WIE ZB IN DER FORM DIESES VIOLIN / BOXEN PLOTS

------------> Aber generell ist die Kritik an meinem benutzten Datensatz gerechfertigt, dass bereits kleine Schwankungen oder 'gerade so nicht erkannte' - eigentlich als 'Robotic' gelabelte Queries mit in den Datensatz der Organic Queries einige Schwankungen der Daten hervorrufen können.

--> Daher ist ein Vergleich in absoluten Query Zahlen nur bedingt zulässig, da der Anteil an organic Querien an Robotic Querien zwischen 0.3 und 1% schwankt. Daher gebe ich keine Mittelwerte der Daten 

---> Allerdings ein Mittelwert über die Query Percentages eher nicht. Da hier unterschiedlich viele,
	sog. Organic bzw. Robotic Queries festgestellt wurden.

---------------------------------------------------------------------------------------


.... for a deeper / more in depth analysis after the first percantages and occurrences per query, it seems to be right, to eliminate redundant queries, to get a more diverse picture of the data






------------------------------------------------------------------------------------------

An den Heatmaps erkennt man -> wir haben vor allem bei den Ranks nun ein weitaus diverseres Bild, als zuvor.!

Redundanzen Eliminierung dient zum großen Teil der Diversifizierung der Daten.

----------------------------------------------------------------------------------------

Vergleich z.B. zwischen reference property in only reference property und reference property in derived + reference property.

Rausnehmen von kleinen datatypes. -> siehe zusätzliche grafik


-----------------------------------------------------------------------------------

Auswertung: 
-- für die scenarios NUR non_redundant




-------------------------------------------------------------------------------

Do not forget about the false Wikidata Properties.

-----------------------------------------------------------------------------------

Falls Percentages: -> schaue immer, dass die Anzahl hoch genug ist, die man vergleichen will.
Ansonsten - schwierige Datengrundlage



-----------------------------------------------------------------------------

Bei dem Vergleich zwischen Wikidata Queries und Wikidata Daten. - bei fehlenden Query Properties in
der WIKIDATA RESEARCH Liste -> sieh nach im Property Dictionary und gib die Werte absolut, also numerisch an.

--------------------------------------------------------------------------------

Bei Facets hängen manche zusammen.
Manche Properties haben mehrere facets.


.--------------------------------------------------------------------------------------

Bei Derived+Reference Property sind fast immer derived .... / reference verwendet.!
Und falls ein anderes Szenario, dann z.B. Filter(derived ... / reference).

------------------------------------------------------------------------------------------

Critique: Look deeper into the scenarios. e.g.

This is now 'just' a Union scenario, because only the top scenario is extracted.
But:
  UNION
 {
   BIND (  ?var3  AS  ?var1 ).
 FILTER (   (  NOT EXISTS   {
    ?var3  <http://www.wikidata.org/prop/P460>  [  <http://www.wikidata.org/prop/statement/P460>  [] ;
( <http://www.w3.org/ns/prov#wasDerivedFrom> / <http://www.wikidata.org/prop/reference/P248> / <http://www.wikidata.org/prop/direct/P50> ) <http://www.wikidata.org/entity/Q26456>  ] .
  }

This could be a UNION + FILTER + PROP PATH + BLANK NODE  

--> needs a WAY MORE complex approach (and more time) than mine, but should be possible with my data.
---> and should give even more detailed information about the data. e.g., that nearly every Derived + Reference Property Combination is
	used in a Property Path. (i.e. a PROPPATH, PROPPATH+UNION, PROPPATH+FILTER, aso.)

---------------------------------------------------------------------------------

Bei der Heatmap zu der Verteilung auf die einzelnen Datentypen der Metadaten die totale Verteilung (also für alle Timeframes) schriftlich
mit dazu angeben. Bei der Szenarien ist das schon in der Grafik drin.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SELECT ?facetOFLabel
WHERE
{
wd:P580 wdt:P31 ?o .
?o wdt:P279* ?o2 .
FILTER (!regex(STR(?o2), "Q35120"))
?o2 wdt:P1269 ?facetOF .
SERVICE wikibase:label { bd:serviceParam wikibase:language "en" }
}

Yields:
chronology
time
duration

BUT 

    SELECT ?facetOFLabel
    WHERE
    {
        wd:P580 wdt:P31 ?o .
        ?o wdt:P1269 ?facetOF .
        SERVICE wikibase:label { bd:serviceParam wikibase:language "en" }
    }

yields:
chronology

--> use the secind one to only query the first one.
--> no redundanciey, if e.g. 100x chronology property & 10x times a time property

--> 110x times ? NO -> 10 times is better

--------------------------------------------------------------------------------------

While calculating the top facets, also calculate the top poroperties without facets combined in the top 15 facets and add them by their name!!.

How many properties in Wikidata are without facets?

-------------------------------------------------------------------------------------

--> when a property has no facet -> use it with its ID as a facet
->->-> only use the lowest property

---> delete the scenario for "group" and join it with the others  --> increases sub Select!
Usage in a sub select e.g. hints for a user wants to exclude some ranks

-----------------------------------------------------------------------------------

for BIND, UNION, MINUS, FILTER, OPTIONAL, SUB SELECT ---> detect the scenarios of the 'additional layer'

-> and for UNION (prob.) also the scenarios of the additional layer of sub select 
---> because it is a often noticed thing to happen!

-> for FLITER, detect the operator

-------------------------------------------------------------------------------------
Do not forget about the handwritten others information of the qualifiers

-------------------------------------------------------------------------------

BIND -> only for OVERALL queries

--------------------------------------------------------------------------------

"!=", "=", "&&", "||", "in", "notin" ----> not found in pattern !

----------------------------------------------------------------------------------

>100% on scenarios in the additional scenarios ---> approx. with BLANK + PROPPATH !

----------------------------------------------------------------------------------------


IF talking about the % diagramms - keep in mind the ACTUAL values!
not talking about x%, while talking about 10 queries ...

-------------------------------------------------------------------------------------

Wikidata Qualifier: Series Ordinal top1 on Qualifiers
But on facets, the depicts is much bigger than series ordinal1!!! --> Importance of the facet analysis!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

--------------------------------------------------------------------------

WDT vs PS usage!


-------------


Do NOT FORGET ABOUT the ASK, DESTRUCT, ... queries


---------------------------------------------------------



Do not forget about the counted queries
Do not forget about the BIND ADDITIONAL INFORMATION

